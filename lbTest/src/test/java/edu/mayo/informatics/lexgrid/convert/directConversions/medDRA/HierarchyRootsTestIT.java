
package edu.mayo.informatics.lexgrid.convert.directConversions.medDRA;import org.LexGrid.LexBIG.DataModel.Collections.ResolvedConceptReferenceList;import org.LexGrid.LexBIG.DataModel.Core.CodingSchemeVersionOrTag;import org.LexGrid.LexBIG.Extensions.Generic.LexBIGServiceConvenienceMethods;import org.LexGrid.LexBIG.Impl.function.LexBIGServiceTestCase;import org.junit.Before;import org.junit.Test;

/** * The Class HierarchyRootsTestIT. *  * @author <a href="mailto:kevin.peterson@mayo.edu">Kevin Peterson</a> */
public class HierarchyRootsTestIT extends DataLoadTestBase {		private ResolvedConceptReferenceList roots;	@Before	public void setUp() throws Exception {		super.setUp();		LexBIGServiceConvenienceMethods lbscm = 			(LexBIGServiceConvenienceMethods)lbs.getGenericExtension("LexBIGServiceConvenienceMethods");				CodingSchemeVersionOrTag version = new CodingSchemeVersionOrTag();		version.setVersion(LexBIGServiceTestCase.MEDDRA_VERSION);								roots = lbscm.getHierarchyRoots(LexBIGServiceTestCase.MEDDRA_URN, version, null);	}		@Test	public void testRootsNotNull(){		assertNotNull(roots);	}		@Test	public void testRootsLength(){		int count = roots.getResolvedConceptReferenceCount();		assertTrue("Roots: " + count, count == 2);	}}